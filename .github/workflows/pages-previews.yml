name: Pages: prod + branch previews

on:
  push:
    branches: ['**']          # build prod and every branch
  pull_request:               # adds preview link as a PR comment

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency: pages-${{ github.ref }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Compute a safe folder name for the branch
      - name: Compute preview slug
        id: slug
        run: |
          BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}"
          SLUG=$(echo "$BRANCH" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9._-]+/-/g')
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "slug=$SLUG" >> $GITHUB_OUTPUT

      # Build a 'site' folder (static project â€“ just copy files)
      - name: Build site folder
        run: |
          mkdir -p site
          rsync -av \
            --exclude '.git' \
            --exclude '.github' \
            --exclude 'ttt-server' \
            --exclude 'node_modules' \
            ./ site/
          touch site/.nojekyll

      # Deploy MAIN to gh-pages root (production)
      - name: Deploy production (gh-pages root)
        if: github.ref_name == 'main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: site
          clean: true
          clean-exclude: |
            previews/*

      # Deploy FEATURE branches to /previews/<branch>
      - name: Deploy preview (previews/<branch>)
        if: github.ref_name != 'main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: site
          target-folder: previews/${{ steps.slug.outputs.slug }}
          clean: false

      # Sticky comment on PRs with the preview link
      - name: Comment preview URL
        if: github.event_name == 'pull_request' && github.ref_name != 'main'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ðŸš€ Preview: https://${{ github.repository_owner }}.github.io/previews/${{ steps.slug.outputs.slug }}/
